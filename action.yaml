name: 'Create/update Release Pull Request'
description: 'Creates a pull request to a release branch with the changes since the last release'
inputs:
  released_version: 
    description: "Version number of latest release (e.g. 5.0.1)"
    required: true
  next_version: 
    description: "Version number of next release (e.g. 6.0.0)"
    required: true
  github_token:
    description: "Github token"
    required: true
  ref:
    description: "Git ref of commit to release"
    default: ${{ github.ref }}
    required: true
runs:
  using: "composite"
  steps:
    - name: Create/update target branch for release, based on previous release
      run: |
        branch=${GITHUB_REF#refs/heads/}
        base_ref=$(
          [ "${{ inputs.released_version}}" ] \
          && echo "v${{ inputs.released_version }}" \
          || git rev-list $branch --reverse | head -n1
        )
        git checkout $base_ref
        git checkout -b release/v${{ inputs.next_version }}
        git push --force --set-upstream origin release/v${{ inputs.next_version }}
      shell: bash
    - name: Create/update a branch off `main` for the commit to be released
      run: |
        git checkout ${{ inputs.ref }}
        git checkout -b pre-release/v${{ inputs.next_version }}
        git push --force --set-upstream origin pre-release/v${{ inputs.next_version }}
      shell: bash
    - name: Check for existing PR for this release
      id: pr-already-exists
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        output=$(gh pr list --base release/v${{ inputs.next_version }} | wc -l)
        result=$([ $output == "1" ] && echo "true" || echo "" )
        echo "::set-output name=result::$result"
      shell: bash
    - name: Create Pull Request
      id: create-pr
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        echo "exists: ${{ steps.pr-already-exists.outputs.result }}"
        [ "${{ steps.pr-already-exists.outputs.result }}" ] && echo "PR already exists" && exit 0
        ref="${{ inputs.ref }}"
        branch=${ref/refs\/heads\//}
        cat >${{ runner.temp }}/body <<EOT
        Auto-generated by the [pre-release.yaml](https://github.com/${{ github.repository }}/blob/$branch/.github/workflows/pre-release.yaml)
        workflow because the CHANGELOG.md file contains a heading for v${{ inputs.next_version }}.

        The latest git tag is v${{ inputs.released_version }}, so it looks like a release is needed.

        Review this PR carefully. When it's merged, the v${{ inputs.next_version }} release will happen automatically.

        If you need to make changes to this release, just push more commits to the \`${branch}\` branch and this PR will be automatically updated.
        EOT
        url=$(gh pr create \
          --base release/v${{ inputs.next_version }} \
          --head pre-release/v${{ inputs.next_version }} \
          --title "Release v${{ inputs.next_version }}" \
          --body-file ${{ runner.temp }}/body)
        echo "::set-output name=url::$url"
      shell: bash
        
