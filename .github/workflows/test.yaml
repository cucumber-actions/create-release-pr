name: Test

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test-create-first-release:
    name: It creates a PR with all commits when releasing for the first time
    runs-on: ubuntu-latest
    env:
      next_version: A.B.C
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/clean-up-from-tests
      - name: Prepare a fake commit to release
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git checkout -b develop
          touch "a-file-to-release"
          git add .
          git commit -m "Add a-file-to-release"
          git push origin develop
      - name: Test the action
        uses: ./
        with:
          released_version:
          next_version: ${{ env.next_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/heads/develop
      - name: Check for PR against the release branch
        run: |
          id=$(gh pr list --base release/v${{ env.next_version }} | awk -v col=1 '{print $col}')
          [ $id ]
          files=$(gh pr view $id --json files --jq '.[] | [.[].path ]')
          [ $files == '["a-file-to-release"]

  test-create-pr:
    name: It creates a PR
    runs-on: ubuntu-latest
    needs: test-create-first-release
    env:
      released_version: X.Y.Z
      next_version: A.B.C
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/clean-up-from-tests
      - name: Prepare a fake commit to release
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git checkout -b develop
          touch "a-file-already-released"
          git add .
          git commit -m "Add a-file-already-released"
          git tag v${{ env.released_version }}
          touch "a-file-to-release"
          git add .
          git commit -m "Add a-file-to-release"
          git push origin develop
          git push --tags
      - name: Test the action
        uses: ./
        with:
          released_version: ${{ env.released_version }}
          next_version: ${{ env.next_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/heads/develop
      - name: Check for PR against the release branch
        run: |
          id=$(gh pr list --base release/v${{ env.next_version }} | awk -v col=1 '{print $col}')
          [ $id ]
          files=$(gh pr view $id --json files --jq '.[] | [.[].path ]')
          [ $files == '["a-file-to-release"]

  test-update-existing-pr:
    name: It updates an existing PR
    runs-on: ubuntu-latest
    needs: test-create-pr
    env:
      released_version: X.Y.Z
      next_version: A.B.C
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          fetch-depth: 0
      - name: Create another commit and push it
        run: |
          touch "another-file-for-the-release"
          git add .
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git commit -m "Add another-file-for-the-release"
          git push origin develop
      - name: Update the release PR
        uses: ./
        with:
          released_version: ${{ env.released_version }}
          next_version: ${{ env.next_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/heads/develop
      - name: Check contents of the PR
        run: |
          id=$(gh pr list --base release/v${{ env.next_version }} | awk -v col=1 '{print $col}')
          files=$(gh pr view $id --json files --jq '.[] | [.[].path ]')
          [ $files == '["a-file-to-release","another-file-for-the-release"]' ]
      - uses: ./.github/actions/clean-up-from-tests